const fs = require('fs');

function convertTimeFormat(srtTime) {
    const [hours, minutes, seconds] = srtTime.split(':');
    const [sec, milli] = seconds.split(',');
    const formattedSeconds = parseFloat(sec + '.' + milli).toFixed(2);
    return `${hours}:${minutes}:${formattedSeconds}`;
}

function srtToAss(srtContent) {
    const assHeader = `
[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Youtube,Helvetica Neue,100,&H0000FFFF,&H00FFFFFF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,5,0.1,5,10,10,10,1


[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
`;

    const lines = srtContent.split('\n');
    let assContent = assHeader;

    for (let i = 0; i < lines.length; i++) {
        if (lines[i].match(/^\d+$/)) {
            const timeLine = lines[++i];
            const [start, end] = timeLine.split(' --> ').map(convertTimeFormat);

            let text = '';
            while (lines[++i] && lines[i].trim() !== '') {
                text += lines[i] + '\\N';
            }
            text = text.slice(0, -2); // 마지막 '\N' 제거

            const totalDuration = (parseFloat(end.split(':')[2]) - parseFloat(start.split(':')[2])) * 100;
            const words = text.split(' ');
            const kTime = Math.round(totalDuration / words.length);
            let karaokeText = '';
            for (const word of words) {
                karaokeText += `{\\k${kTime}}${word} `;
            }

            assContent += `Dialogue:0, ${start}, ${end}, Youtube,, 0, 0, 0,,${karaokeText.trim()}\n`;


        }
    }

    return assContent;
}

// 예제로 srt 파일을 읽어서 ass 파일로 변환
fs.readFile('sample.srt', 'utf8', (err, data) => {
    if (err) {
        console.error('Error reading the file:', err);
        return;
    }

    const assContent = srtToAss(data);
    fs.writeFile('output.ass', assContent, (err) => {
        if (err) {
            console.error('Error writing the file:', err);
        } else {
            console.log('ASS file has been saved!');
        }
    });
});
